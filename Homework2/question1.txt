A pragma provides commands to the compiler, rather than affecting the execution of the program. As such they do not change the semantics of the program. However, the nature of a select few pragmas do affect program semantics. Pragmas are processed by the scanner because they must be passed to the compiler itself, and do not (and should not) be passed to the parser, as it is not part of the actual program's structure; it would also significantly increase the complexity of the parse tree.

Allowing the use of pragmas allows them to remain separate from the language itself, and potentially work in multiple different languages. They can be useful for increasing compile time by turning on or off certain compiler features as needed, or instructing the compiler explicitly to use a certain optimization. However, pragmas that go to far and modify the program's semantics should not be implemented. Implementing pragmas also adds complexity to the scanner.
